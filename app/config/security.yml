# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        DCGov\HavenBundle\Entity\User:
            algorithm: bcrypt
            cost: 12

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        
    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        
        db_provider:
            entity:
                class: DCGov\HavenBundle\Entity\User
                property: email
                
        in_memory:
            memory:
                users:
                    jsingh@dc.gov:
                        password: pass123
                        roles: 'ROLE_ADMIN'

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
                  
        secured_area:
            pattern:   ^/
            anonymous: ~
            light_saml_sp:
                provider: db_provider
                user_creator: user_creator
                login_path: /saml/login
                check_path: /saml/login_check
                default_target_path: /safehaven
          
            form_login:
                login_path: /admin/login
                check_path: /admin/login_check
                default_target_path: /
                remember_me: true
            logout:
                path:   /logout

            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
            
    access_control:
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: IS_AUTHENTICATED_ANONYMOUSLY }   
#        - { path: ^/saml/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^(.*)/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/admin/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/safehaven, roles: ROLE_USER }
        